declare class UserSessionMethods {
    list({ userId }: {
        userId: string;
    }): AsyncGenerator<any, void, unknown>;
}
declare class UserConversationMethods {
    list({ userId, limit, startingAfter, lastMessageAfter, lastMessageBefore, unreadsOnly }: {
        userId: string;
        limit?: number;
        startingAfter?: string;
        lastMessageAfter?: number;
        lastMessageBefore?: number;
        unreadsOnly?: boolean;
    }): AsyncGenerator<any, void, unknown>;
}
interface User {
    name: string;
    welcomeMessage?: string;
    photoUrl?: string;
    role?: string;
    email?: Array<string>;
    phone?: Array<string>;
    custom?: Map<string, string>;
    locale?: string;
}
export default class UserMethods {
    sessions: UserSessionMethods;
    conversations: UserConversationMethods;
    create(userId: string, user: User): Promise<any>;
    get(userId: string): Promise<any>;
    update(userId: string, user: User): Promise<any>;
    list({ limit, isOnline, startingAfter }?: {
        limit?: number;
        isOnline?: boolean;
        startingAfter?: string;
    }): AsyncGenerator<any, void, unknown>;
}
export {};
